{"name":"Deepcc","tagline":"DeepCC: A Deep Reinforcement Learning Plug-in to Boost the performance of your TCP scheme in Cellular Networks!","body":"# DeepCC v1.0\r\n\r\nInstallation Guide\r\n==================\r\n### Source Code:\r\n    Get the source code and follow the instructions in deepcc.v1.0/README.md file.\r\n\r\n        git clone https://github.com/deep-cc/mobi20.git\r\n        cd mobi20\r\n        tar -xzf deepcc.v1.0.tar.gz \r\n        cd deepcc.v1.0\r\n        cat README.md    \r\n\r\n### Installing Required Tools\r\n\r\n1. Install Mahimahi (http://mahimahi.mit.edu/#getting)\r\n\r\n\t```sh  \r\n\tsudo apt-get install build-essential git debhelper autotools-dev dh-autoreconf iptables protobuf-compiler libprotobuf-dev pkg-config libssl-dev dnsmasq-base ssl-cert libxcb-present-dev libcairo2-dev libpango1.0-dev iproute2 apache2-dev apache2-bin iptables dnsmasq-base gnuplot iproute2 apache2-api-20120211 libwww-perl\r\n\tgit clone https://github.com/ravinet/mahimahi \r\n\tcd mahimahi\r\n\t./autogen.sh && ./configure && make\r\n\tsudo make install\r\n\tsudo sysctl -w net.ipv4.ip_forward=1\r\n\t```\r\n\r\n2. Install iperf3\r\n\r\n\t```sh\r\n    sudo apt-get remove iperf3 libiperf0\r\n    wget https://iperf.fr/download/ubuntu/libiperf0_3.1.3-1_amd64.deb\r\n    wget https://iperf.fr/download/ubuntu/iperf3_3.1.3-1_amd64.deb\r\n    sudo dpkg -i libiperf0_3.1.3-1_amd64.deb iperf3_3.1.3-1_amd64.deb\r\n    rm libiperf0_3.1.3-1_amd64.deb iperf3_3.1.3-1_amd64.deb\r\n\t```\r\n\r\n3. Install Python, pip, and virtual environment\r\n\r\nSource code requires Python 3.4, 3.5, or 3.6. Python 3.x is generally installed by default on Ubuntu.\r\n\r\nCheck Python version\r\n```\r\npython3 --version\r\n```\r\n\r\nInstall pip3 and virtual environment\r\n\r\n```\r\nsudo apt update\r\nsudo apt install python3-pip\r\nsudo pip3 install -U virtualenv\r\n```\r\n\r\n### Create Virtual environment\r\n\r\nCreate a new virtual environment by choosing a Python interpreter and make `~/venv` directory to hold it: \r\n\r\n```\r\nsudo mkdir ~/venv\r\nvirtualenv --system-site-packages -p python3 ~/venv\r\n```\r\n\r\n4. Install Tensorflow (CPU)\r\n\r\nActivate the virtual environment and install Tensorflow\r\n```\r\nsource ~/venv/bin/activate\r\npip install --upgrade pip\r\npip install --upgrade tensorflow\r\n```\r\n\r\n5. Install sysv_ipc 1.0.0\r\n```\r\npip install sysv_ipc\r\n```\r\n\r\nVerify Installation\r\n```\r\npython -c \"import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))\"\r\n```\r\n\r\nTo deactivate venv\r\n```\r\n(venv) $ deactivate\r\n```\r\n\r\n### Patching DeepCC Kernel: Install the prepared debian packages.\r\n\r\n    cd linux\r\n    sudo dpkg -i linux-image*\r\n    sudo dpkg -i linux-header*\r\n    sudo reboot \r\n \r\n### Verify the new kernel\r\nUse the following command to make sure that new kernel is installed:\r\n\r\n\tuname -r\r\n\r\nThe output should be 4.13.1-0309. If not you need to bring the 4.13.1-0309 Kernel image on top of the grub list. For instance, you can use grub-customizer application. Install the grub-customizer using following:\r\n\r\n   sudo add-apt-repository ppa:danielrichter2007/grub-customizer\r\n   sudo apt-get update\r\n   sudo apt-get install grub-customizer\r\n   sudo grub-customizer\r\n\r\n### Build DeepCC's Server-Client Apps\r\n To build the required applications, run the following:\r\n\r\n    ./build.sh\r\n\r\n### Cellular Traces \r\n    All gathered traces including some from prior work is located at the folder named traces.\r\n\r\n### Use the learned model\r\n    The trained models of TCP Cubic, BBR, Westwood, and Illinois used throughout the paper located in <models> folder.\r\n    \r\n    cd models/\r\n    ./setitup.sh\r\n\r\n### Run a Sample Test using the learned model\r\n\r\nHere, we enable DeepCC for TCP Cubic and run a sample test over TMobile-LTE-driving trace:\r\n    \r\n\t./evaluate.sh 8000 cubic  \r\n    \r\nResults will be generated automatically in rl-module/log/*\r\nYou can check out the summary of results in rl-module/log/results-deep-cubic*.tr file. \r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}